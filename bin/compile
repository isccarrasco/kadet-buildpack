#!/usr/bin/env bash

# Setup Path variables, for later use in the Buildpack.
BIN_DIR=$(cd "$(dirname "$0")"; pwd) # absolute path
ROOT_DIR=$(dirname "$BIN_DIR")
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3


indent() {
  sed -u 's/^/       /'
}

cleanup() {
  sed -e 's/\.\.\.\+/.../g' | sed -e '/already satisfied/Id' | sed -e '/No files were found to uninstall/Id' | sed -e '/Overwriting/Id' | sed -e '/python executable/Id' | sed -e '/no previously-included files/Id'
}

export_env_dir() {
  env_dir=$1
  acceptlist_regex=${2:-''}
  denylist_regex=${3:-'^(PATH|GIT_DIR|CPATH|CPPATH|LD_PRELOAD|LIBRARY_PATH)$'}
  if [ -d "$env_dir" ]; then
    for e in $(ls $env_dir); do
      echo "$e" | grep -E "$acceptlist_regex" | grep -qvE "$denylist_regex" &&
      export "$e=$(cat $env_dir/$e)"
      :
    done
  fi
}

echo "-----> Found a requirements-kadet.txt"

# if kadet-requirements.txt has contents, display them (indented to align)
# otherwise error

if [ ! -f "$BUILD_DIR/requirements-kadet.txt" ]; then
  echo "requirements-kadet.txt was empty"
  exit 1
else
  # echo "requirements-kadet.txt is not empty, here are the contents" | cleanup | indent
  # cat "$BUILD_DIR/requirements-kadet.txt" | cleanup | indent

  echo "exporting variables" | cleanup | indent
  export_env_dir $ENV_DIR

  # echo "installing graphviz" | cleanup | indent
  # APT_OPTIONS="-o debug::nolocking=true -o dir::cache=$APT_CACHE_DIR -o dir::state=$APT_STATE_DIR"
  # apt-get install -y graphviz graphviz-dev | cleanup | indent

  echo "installing gosdt" | cleanup | indent
  git clone https://github.com/Jimmy-Lin/GeneralizedOptimalSparseDecisionTrees.git gosdt 
  cd gosdt
  aclocal
  automake --add-missing
  ./autobuild --install
  ./autobuild --install-python
  
  echo "installing dependencies" | cleanup | indent
  /app/.heroku/python/bin/python -m pip install --upgrade pip
  # /app/.heroku/python/bin/pip install -r "$BUILD_DIR/requirements-kadet.txt" --no-cache-dir --exists-action=w --src=/app/.heroku/src --disable-pip-version-check --no-cache-dir 2>&1 | tee "$WARNINGS_LOG" | cleanup | indent
  /app/.heroku/python/bin/pip install sklearn --no-cache-dir --exists-action=w --src=/app/.heroku/src --disable-pip-version-check --no-cache-dir 2>&1 | tee "$WARNINGS_LOG" | cleanup | indent
  /app/.heroku/python/bin/pip install Cython --install-option="--no-cython-compile" --no-cache-dir --exists-action=w --src=/app/.heroku/src --disable-pip-version-check --no-cache-dir 2>&1 | tee "$WARNINGS_LOG" | cleanup | indent
  /app/.heroku/python/bin/pip install ipython --no-cache-dir --exists-action=w --src=/app/.heroku/src --disable-pip-version-check --no-cache-dir 2>&1 | tee "$WARNINGS_LOG" | cleanup | indent
  echo "finishing dependencies instalation" | indent

  echo "token" | indent
  echo "$BITBUCKET_TOKEN" | indent
  # set BITBUCKET_TOKEN= cat $ENV_DIR/BITBUCKET_TOKEN

  echo "installing from git" | indent
  /app/.heroku/python/bin/pip install git+https://isccarrasco:$BITBUCKET_TOKEN@bitbucket.org/koneksys/automl_decision_trees.git#egg=kadet-lib

fi | indent

